apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        multiDexEnabled true

        //版本名后面添加一句话，意思就是flavor dimension 
        // 的维度就是该版本号，这样维度就是都是统一的了
        flavorDimensions "versionCode"
        
        renderscriptTargetApi 28
        renderscriptSupportModeEnabled true
//        vectorDrawables.useSupportLibrary = true    
        ndk {
            // 设置支持的SO库架构
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }
    }

    dataBinding {
        enabled true
    }
    signingConfigs {
        release {
            storeFile file("key.jks")
            storePassword "keyxkeyx"
            keyAlias "keyx"
            keyPassword "keyxkeyx"
        }
    }
    buildTypes {
        debug {
            resValue "string", "API_HOST", "http://b.com:2333/"

            buildConfigField("String", "UMENG_KEY", "\"233\"")
            buildConfigField("boolean", "IS_DEUBG", "true")//默认是debug
            manifestPlaceholders = [CHANNEL_VALUE: "test"]
            //Zipalign优化
            zipAlignEnabled false
            // 移除无用的resource文件 shrink和minify要同时开关，否则报错
            shrinkResources false
            minifyEnabled false //混淆
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            resValue "string", "API_HOST", "http://c.com:2333/"
            buildConfigField("String", "UMENG_KEY", "\"233\"")
            //Zipalign优化
            zipAlignEnabled true
            //minifyEnabled字段为true时已经包含了shrinkResources
            minifyEnabled false //混淆
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
    
    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        apptest {
            manifestPlaceholders = [CHANNEL_VALUE: "test"]
            buildConfigField("boolean", "IS_DEUBG", "false")//测试debug  打正式版不要选这个
        }
        play {
            manifestPlaceholders = [CHANNEL_VALUE: "play"]
            buildConfigField("boolean", "IS_DEUBG", "false")
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'x86_64', 'armeabi-v7a', 'arm64-v8a'  //select ABIs to build APKs for
            universalApk true //generate an additional APK that contains all the ABIs
        }
    }
    // map for the version code
    project.ext.versionCodes = ['armeabi-v7a': 1, 'arm64-v8a': 2, 'x86': 3, 'x86_64': 4]
    //分包
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            String name = output.baseName
            if (name.contains("v8a")) {
                name = "64位版"
            } else if (name.contains("universal")) {
                name = "通用版"
            }

            outputFileName = "App" + "-v" + variant.versionName + "-" +
                    name + ".apk"
        }
    }

}
repositories {
    flatDir {
        dirs 'libs'
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    //MVVMHabit
    implementation project(':arch:mvvmhabit')
    
    //support
    implementation rootProject.ext.support["design"]
    //下拉刷新,上拉加载
    implementation 'com.lcodecorex:tkrefreshlayout:1.0.7'
    //底部tabBar
    implementation('me.majiajie:pager-bottom-tab-strip:2.2.5') {
        exclude group: 'com.android.support'
    }
    implementation 'com.github.mmin18:realtimeblurview:1.2.1'
    implementation 'pub.devrel:easypermissions:3.0.0'
    api 'com.allenliu.versionchecklib:library:2.2.1'
    //1.1.0  是androidx版本
    api 'com.google.android:flexbox:2.0.1'
    api 'top.zibin:Luban:1.1.8'
    api 'com.github.LuckSiege.PictureSelector:picture_library:v2.2.4'
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.3'
    api 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.3'//没有使用特殊Header，可以不加这行
    api 'com.just.agentweb:agentweb:4.1.2' // 浏览器(必选)
    api 'com.gyf.immersionbar:immersionbar:3.0.0'

    //base
    api rootProject.ext.support["appcompat-v7"]
    api rootProject.ext.support["recyclerview-v7"]
    api rootProject.ext.support["cardview"]
    api rootProject.ext.support["constraint-layout"]
    api rootProject.ext.dependencies["utilcode"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.support["design"]
    api rootProject.ext.dependencies["KLog"]
    api rootProject.ext.dependencies["xpopup"]
    api rootProject.ext.dependencies["autosize"]
    api rootProject.ext.dependencies["mmkv"]
    api rootProject.ext.dependencies["FastJson"]
//    api 'com.github.yuzhiqiang1993:zxing:2.2.8'
    api rootProject.ext.dependencies["ZxingLite"]
    //rx
    api rootProject.ext.dependencies["rxjava"]
    api rootProject.ext.dependencies["rxandroid"]
    api rootProject.ext.dependencies["rxpermissions"]
//    api rootProject.ext.dependencies["AutoDispose"]
//    api rootProject.ext.dependencies["matisse"]
    //other
    api rootProject.ext.dependencies["retrofit"]
    api rootProject.ext.dependencies["adapter-rxjava"]
    api rootProject.ext.dependencies["converter-scalars"]
//    api rootProject.ext.dependencies["retrofit-url-manager"]
//    api rootProject.ext.dependencies["lifecyclemodel"]
//    api rootProject.ext.dependencies["stetho"]
//    api rootProject.ext.dependencies["stetho-okhttp3"]
    api rootProject.ext.dependencies["baseRecyclerViewAdapter"]
    api rootProject.ext.dependencies["numberprogressbar"]
//    api rootProject.ext.dependencies["androideventbus"]
    api rootProject.ext.dependencies["tabBottom"]
    api rootProject.ext.dependencies["tkrefreshlayout"]
    api rootProject.ext.dependencies["xbanner"]
    api rootProject.ext.dependencies["qmui"]
  
//    implementation rootProject.ext.dependencies.MVVMHabit
    //内存泄漏测试
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.4'
//    debugImplementation 'com.squareup.leakcanary:leakcanary-support-fragment:1.6.3'
//    debugImplementation rootProject.ext.dependencies["canary-debug"]
//    releaseImplementation rootProject.ext.dependencies["canary-release"]
//    testImplementation rootProject.ext.dependencies["canary-release"]
    

    //swagger注解支持
    implementation 'io.swagger:swagger-annotations:1.5.22'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]


}
